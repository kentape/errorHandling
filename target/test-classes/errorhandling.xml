<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <flow name="mainFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/error" doc:name="HTTP"/>
        <set-payload value="Hej" doc:name="Set Payload"/>
        <logger message="#['\n' + &quot;Query parameter size: &quot; + message.inboundProperties.'http.query.params'.size() + '\n' + &quot;FlowName: &quot; + message.inboundProperties.'http.query.params'.flowName]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.'http.query.params'.flowName == &quot;subFlow1&quot;]">
                <flow-ref name="subFlow1" doc:name="subFlow1"/>
            </when>
            <when expression="#[message.inboundProperties.'http.query.params'.flowName == &quot;subFlow2&quot;]">
                <flow-ref name="subFlow2" doc:name="subFlow2"/>
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <exception-strategy ref="Parent_Choice_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="subFlow1">
        <set-variable variableName="flowName" value="subFlow1" doc:name="Variable"/>
        <logger message="#['\n' + &quot;Executing: &quot; + flowVars.flowName]" level="INFO" doc:name="Logger"/>
    	<scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy"><![CDATA[throw new se.kenta.mule.exception.TestException("Thrown from subFlow1")]]></scripting:script>
        </scripting:component>
        <exception-strategy ref="Child_Choice_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="subFlow2">
        <set-variable variableName="flowName" value="subFlow2" doc:name="Variable"/>
        <logger message="#['\n' + &quot;Executing: &quot; + flowVars.flowName]" level="INFO" doc:name="Logger"/>
    	<scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy"><![CDATA[throw new se.kenta.mule.exception.TestException("Thrown from subFlow2")]]></scripting:script>
        </scripting:component>
    </flow>
    <choice-exception-strategy name="Child_Choice_Exception_Strategy">
        <catch-exception-strategy when="#[exception.causedBy(se.kenta.mule.exception.TestException)]" doc:name="Catch Exception Strategy" enableNotifications="false" logException="false">
            <logger message="#['\n' + &quot;Child_Choice_Exception_Strategy&quot; + '\n' + &quot;flowName: &quot; + flowVars.flowName]" level="INFO" doc:name="Logger"/>
            <!--logger message="#['\n' + &quot;Child_Choice_Exception_Strategy (&quot; + &quot;flowName: &quot; + flowVars.flowName + &quot;): &quot; + '\n' + &quot;exception.getVerboseMessage(): &quot; + exception.getVerboseMessage() + '\n' +  &quot;exception.getDetailedMessage(): &quot; + exception.getDetailedMessage()]" level="INFO" doc:name="Logger"/-->
            <set-payload value="#[&quot;Child_Choice_Exception_Strategy (&quot; + &quot;flowName: &quot; + flowVars.flowName + &quot;): &quot; + exception]" doc:name="Set Payload"/>
            <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy"><![CDATA[throw new se.kenta.mule.exception.TestException("Thrown from Child_Choice_Exception_Strategy")]]></scripting:script>
        </scripting:component>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(java.lang.Exception)]" doc:name="Catch Exception Strategy" enableNotifications="false" logException="false">
        	<logger message="#['\n' + &quot;Child_Choice_Exception_Strategy&quot; + '\n' + &quot;flowName: &quot; + flowVars.flowName]" level="INFO" doc:name="Logger"/>
            <!--logger message="#['\n' + &quot;Child_Choice_Exception_Strategy (&quot; + &quot;flowName: &quot; + flowVars.flowName + &quot;): &quot; + '\n' + &quot;exception.getVerboseMessage(): &quot; + exception.getVerboseMessage() + '\n' +  &quot;exception.getDetailedMessage(): &quot; + exception.getDetailedMessage()]" level="INFO" doc:name="Logger"/-->
            <set-payload value="#[&quot;Child_Choice_Exception_Strategy (&quot; + &quot;flowName: &quot; + flowVars.flowName + &quot;): &quot; + exception]" doc:name="Set Payload"/>
            <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy"><![CDATA[throw new se.kenta.mule.exception.TestException("Thrown from Child_Choice_Exception_Strategy")]]></scripting:script>
        </scripting:component>
        </catch-exception-strategy>
        <exception-strategy ref="Parent_Choice_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </choice-exception-strategy>
    <choice-exception-strategy name="Parent_Choice_Exception_Strategy">
        <catch-exception-strategy when="#[exception.causedBy(se.kenta.mule.exception.TestException)]" doc:name="Catch Exception Strategy" enableNotifications="false" logException="false">
        	<logger message="#['\n' + &quot;Parent_Choice_Exception_Strategy&quot; + '\n' + &quot;flowName: &quot; + flowVars.flowName]" level="INFO" doc:name="Logger"/>
            <!--logger message="#['\n' + &quot;Parent_Choice_Exception_Strategy (&quot; + &quot;flowName: &quot; + flowVars.flowName + &quot;): &quot; + '\n' + &quot;exception.getVerboseMessage(): &quot; + exception.getVerboseMessage() + '\n' +  &quot;exception.getDetailedMessage(): &quot; + exception.getDetailedMessage()]" level="INFO" doc:name="Logger"/-->
            <set-payload value="#[&quot;Parent_Choice_Exception_Strategy (&quot; + &quot;flowName: &quot; + flowVars.flowName + &quot;): &quot; + exception]" doc:name="Set Payload"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(java.lang.Exception)]" doc:name="Catch Exception Strategy" enableNotifications="false" logException="false">
        	<logger message="#['\n' + &quot;Parent_Choice_Exception_Strategy&quot; + '\n' + &quot;flowName: &quot; + flowVars.flowName]" level="INFO" doc:name="Logger"/>
            <!--logger message="#['\n' + &quot;Parent_Choice_Exception_Strategy (&quot; + &quot;flowName: &quot; + flowVars.flowName + &quot;): &quot; + '\n' + &quot;exception.getVerboseMessage(): &quot; + exception.getVerboseMessage() + '\n' +  &quot;exception.getDetailedMessage(): &quot; + exception.getDetailedMessage()]" level="INFO" doc:name="Logger"/-->
            <set-payload value="#[&quot;Parent_Choice_Exception_Strategy (&quot; + &quot;flowName: &quot; + flowVars.flowName + &quot;): &quot; + exception]" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </choice-exception-strategy>
</mule>
